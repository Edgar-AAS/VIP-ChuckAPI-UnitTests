//
//  JokeCategoriesWorker.swift
//  ChuckAPI
//
//  Created by Leonardo Almeida on 12/12/22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

enum NetworkError: Error {
    case badURL
    case invalidResponse
    case invalidData
    case decodeError(String)
}

class JokeDescriptionWorker {
    private let baseURl = "https://api.chucknorris.io/jokes/random?category="
    
    func fetchRandomJoke(categorie: String, completion: @escaping (Result<Joke, Error>) -> Void) {
        print(categorie)
        guard let url = URL(string: baseURl + categorie)  else {
            completion(.failure(NetworkError.badURL))
            return
        }
        
        URLSession.shared.dataTask(with: url) { (data, response, error) in
            guard let response = response as? HTTPURLResponse else {
                completion(.failure(NetworkError.invalidResponse))
                return
            }
            
            if 200...299 ~= response.statusCode {
                guard let jsonData = data else {
                    completion(.failure(NetworkError.invalidData))
                    return
                }
                
                do {
                    let randomJoke = try JSONDecoder().decode(Joke.self, from: jsonData)
                    completion(.success(randomJoke))
                } catch {
                    completion(.failure(NetworkError.decodeError(error.localizedDescription)))
                }
            }
        }.resume()
    }
}
